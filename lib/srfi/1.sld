;; Generated by misc/scripts/gen-srfi-for-r7rs.scm
(define-library
  (srfi 1)
  (export
    remove
    partition
    member
    map
    for-each
    fold-right
    find
    filter
    cons*
    assoc
    set-cdr!
    set-car!
    reverse
    pair?
    null?
    memv
    memq
    list-ref
    list
    length
    cons
    cdr
    cddr
    cdddr
    cddddr
    cdddar
    cddar
    cddadr
    cddaar
    cdar
    cdadr
    cdaddr
    cdadar
    cdaar
    cdaadr
    cdaaar
    car
    cadr
    caddr
    cadddr
    caddar
    cadar
    cadadr
    cadaar
    caar
    caadr
    caaddr
    caadar
    caaar
    caaadr
    caaaar
    assv
    assq
    append
    lset-diff+intersection!
    lset-xor!
    lset-difference!
    lset-intersection!
    lset-union!
    lset-diff+intersection
    lset-xor
    lset-difference
    lset-intersection
    lset-union
    lset-adjoin
    lset=
    lset<=
    reverse!
    alist-delete!
    alist-delete
    delete-duplicates!
    delete-duplicates
    alist-copy
    alist-cons
    delete!
    delete
    break!
    span!
    break
    span
    take-while!
    drop-while
    take-while
    list-index
    every
    any
    find-tail
    remove!
    partition!
    filter!
    map-in-order
    filter-map
    pair-for-each
    map!
    append-map!
    append-map
    reduce-right
    pair-fold-right
    unfold-right
    reduce
    pair-fold
    fold
    unfold
    concatenate!
    concatenate
    append-reverse!
    append-reverse
    append!
    count
    unzip5
    unzip4
    unzip3
    unzip2
    unzip1
    zip
    last-pair
    last
    split-at!
    split-at
    drop-right!
    take!
    drop-right
    take-right
    drop
    take
    car+cdr
    tenth
    ninth
    eighth
    seventh
    sixth
    fifth
    fourth
    third
    second
    first
    iota
    length+
    circular-list
    list=
    null-list?
    not-pair?
    dotted-list?
    circular-list?
    proper-list?
    list-copy
    list-tabulate
    make-list
    xcons)
  (import (srfi :1 lists)))
