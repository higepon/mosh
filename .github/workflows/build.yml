name: Build

on:
  push:
  pull_request:

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    env:
      LD_LIBRARY_PATH: /usr/local/lib
    steps:
      - name: Instlall tools
        run: |
          sudo apt install -y gauche wget make libgmp-dev autoconf automake
          sudo apt install -y re2c bison subversion git
      - name: Install Oniguruma
        run: |
          wget https://github.com/kkos/oniguruma/releases/download/v5.9.6/onig-5.9.6.tar.gz
          tar zvxf onig-5.9.6.tar.gz
          cd onig-5.9.6
          rm config.sub
          rm config.guess
          wget http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.guess
          wget http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.sub
          ./configure
          make
          sudo make install
      - name: Install the latest stable Mosh
        run: |
          wget https://github.com/higepon/mosh/releases/download/mosh-0.2.8-rc3/mosh-0.2.8-rc3.tar.gz
          tar zvxf mosh-0.2.8-rc3.tar.gz
          cd mosh-0.2.8-rc3
          ./configure
          make
          make test
          sudo make install
      - uses: actions/checkout@v3
      - name: Build and test the latest changes.
        run: |
          cd ${{ github.workspace }}
          ./gen-git-build.sh
          ./configure
          make
          make test
          sudo make install

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-12]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    steps:
      - name: Install tools
        run: |
          brew install gmp oniguruma automake re2c bison gauche
          # FIXME: Hardcode this
          echo "HOMEBREW_PREFIX=/usr/local" >> $GITHUB_ENV
          # FIXME: Detect gnump with pkg-config
          echo "LDFLAGS=-L$HOMEBREW_PREFIX/lib" >> $GITHUB_ENV
          echo "CFLAGS=-I$HOMEBREW_PREFIX/include" >> $GITHUB_ENV
          echo "CXXFLAGS=-I$HOMEBREW_PREFIX/include" >> $GITHUB_ENV
          # FIXME: Disable GC during CI for now
          echo "GC_DONT_GC=1" >> $GITHUB_ENV
      - name: Install the latest stable Mosh
        run: |
          curl -OL https://github.com/higepon/mosh/releases/download/mosh-0.2.8-rc3/mosh-0.2.8-rc3.tar.gz
          tar zvxf mosh-0.2.8-rc3.tar.gz
          cd mosh-0.2.8-rc3
          ./configure --prefix=$HOME/opt/mosh
          make -j$(sysctl -n hw.ncpu)
          make test
          sudo make install
          echo "$HOME/opt/mosh/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Build and test the latest changes.
        run: |
          cd ${{ github.workspace }}
          # Workaround to use homebrew bison: Pregenerate these
          $HOMEBREW_PREFIX/opt/bison/bin/bison -p "number_yy" -d src/NumberReader.y -o src/NumberReader.tab.cpp
          $HOMEBREW_PREFIX/opt/bison/bin/bison -d src/Reader.y -o src/Reader.tab.cpp
          ./gen-git-build.sh
          ./configure
          make -j$(sysctl -n hw.ncpu)
          make test
          sudo make install
      - name: Download/Extract packaging resources
        run: |
          cd $HOME/Desktop
          curl -LO http://www.r6rs.org/final/r6rs.tar.gz
          tar zxvf r6rs.tar.gz
          mkdir -p $HOME/NaturalDocs-1.4
          cd $HOME/NaturalDocs-1.4
          curl -o naturaldocs.zip -L "https://osdn.net/frs/g_redir.php?m=jaist&f=naturaldocs%2FStable+Releases%2F1.4%2FNaturalDocs-1.4.zip"
          unzip naturaldocs.zip
      - name: Create dist
        run: |
          cd ${{ github.workspace }}
          make dist
